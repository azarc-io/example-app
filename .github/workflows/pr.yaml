name: Pull Request

on:
  pull_request:
    branches: [ 'main' ]
    types:
      - opened
      - synchronize

env:
  FORCE_COLOR: 1
  RUNNER_ALLOW_RUNASROOT: "1"
  DOCKER_REGISTRY: ghcr.io/azarc-io/verathread-gateway

concurrency:
  group: pr-${{ github.ref || github.run_id }}
  cancel-in-progress: true

jobs:
  lint-be:
    name: "Lint BE"
    runs-on: ubuntu-latest
    steps:
      - name: "Setup"
        uses: "azarc-io/verathread-actions/setup@initial"
        id: setup
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          pat-token: ${{ secrets.PAT_TOKEN }}
          go: true
        env:
          GOPRIVATE: "github.com/azarc-io"
      - name: "Lint"
        uses: "azarc-io/verathread-actions/lint-be@initial"
        with:
          lint-version: "v1.59.1"

  unit-tests-be:
    name: "Unit Test BE"
    runs-on: ubuntu-latest
    env:
      GOPRIVATE: "github.com/azarc-io"
    steps:
      - name: "Setup"
        uses: "azarc-io/verathread-actions/setup@initial"
        id: setup
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          pat-token: ${{ secrets.PAT_TOKEN }}
          gotestsum: true
          go: true
        env:
          GOPRIVATE: "github.com/azarc-io"
      - name: "Unit Test"
        uses: "azarc-io/verathread-actions/unit-test-be@initial"
        env:
          GOPRIVATE: "github.com/azarc-io"
        with:
          repo-name: ${{ steps.setup.repo-name }}

  build-be:
    name: "Build BE"
    runs-on: ubuntu-latest
    steps:
      - name: "Setup"
        uses: "azarc-io/verathread-actions/setup@initial"
        id: setup
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          pat-token: ${{ secrets.PAT_TOKEN }}
          jira-base-url: ${{ secrets.JIRA_BASE_URL }}
          jira-user-email: ${{ secrets.JIRA_USER_EMAIL }}
          jira-api-token: ${{ secrets.JIRA_API_TOKEN }}
          buildx: true
          ghcr: true
          go: true
      - name: "Build"
        uses: "azarc-io/verathread-actions/build-go@initial"
        with:
          artifact-name: ${{ steps.setup.outputs.repo-name }}
          short-sha: ${{ steps.setup.outputs.short-sha }}
          issue: ${{ steps.setup.outputs.issue }}

  build-fe:
    name: "Build FE"
    runs-on: ubuntu-latest
    steps:
      - name: "Setup"
        uses: "azarc-io/verathread-actions/setup@initial"
        id: setup
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          pat-token: ${{ secrets.PAT_TOKEN }}
          jira-base-url: ${{ secrets.JIRA_BASE_URL }}
          jira-user-email: ${{ secrets.JIRA_USER_EMAIL }}
          jira-api-token: ${{ secrets.JIRA_API_TOKEN }}
          buildx: true
          ghcr: true
          node: true
      - name: "Build"
        uses: "azarc-io/verathread-actions/build-node@initial"
        with:
          artifact-name: ${{ steps.setup.outputs.repo-name }}
          short-sha: ${{ steps.setup.outputs.short-sha }}
          issue: ${{ steps.setup.outputs.issue }}

  e2e:
    name: "E2E - K8S ${{ matrix.k8s-version }}"
    runs-on: ubuntu-latest
    needs:
      - unit-tests-be
      - lint-be
      - build-fe
      - build-be
    env:
      REGISTRY_PORT: 5000
      REGISTRY_NAME: kind-registry
      GATEWAY_REGISTRY: localhost:5000/gateway
      GATEWAY_WEB_REGISTRY: localhost:5000/gateway-web
      GATEWAY_TAG: dev
      NAMESPACE: gateway-tests
    # if: github.event_name != 'pull_request'
    steps:
      - name: "Setup"
        uses: "azarc-io/verathread-actions/setup@initial"
        id: setup
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          pat-token: ${{ secrets.PAT_TOKEN }}

  qa:
    name: "Promote To QA"
    runs-on: ubuntu-latest
    environment: qa
    needs:
      - e2e
    steps:
      - name: "Setup"
        uses: "azarc-io/verathread-actions/setup@initial"
        id: setup
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          pat-token: ${{ secrets.PAT_TOKEN }}
          jira-base-url: ${{ secrets.JIRA_BASE_URL }}
          jira-user-email: ${{ secrets.JIRA_USER_EMAIL }}
          jira-api-token: ${{ secrets.JIRA_API_TOKEN }}
          kube-config: ${{ secrets.KUBECONFIG_DEV }}
          ghcr: true
          helm: true
          kubectl: true
      - name: "Deploy"
        uses: "azarc-io/verathread-actions/deploy@initial"
        with:
          ghcr-token: ${{ secrets.GHCR_DOCKER_TOKEN }}
          install-task: "ci:install:app:chart:qa"
          namespace: "qa-next-1"
          short-sha: ${{ steps.setup.outputs.short-sha }}
          issue: ${{ steps.setup.outputs.issue }}
        env:
          MONGO_DSN: ${{ secrets.MONGODB_STAGING_DSN }}

  release:
    name: "Release"
    runs-on: ubuntu-latest
    environment: prd
    outputs:
      version: ${{ steps.tag.outputs.tag }}
    needs:
      - qa
    steps:
      - name: "Setup"
        uses: "azarc-io/verathread-actions/setup@initial"
        id: setup
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          pat-token: ${{ secrets.PAT_TOKEN }}
          checkout-ref: ${{ github.event.pull_request.head.sha }}
          jira-base-url: ${{ secrets.JIRA_BASE_URL }}
          jira-user-email: ${{ secrets.JIRA_USER_EMAIL }}
          jira-api-token: ${{ secrets.JIRA_API_TOKEN }}
          kube-config: ${{ secrets.KUBECONFIG_DEV }}
          ghcr: true
          helm: true
          kubectl: true
          buildx: true
          yq: true
      - name: "Release"
        uses: "azarc-io/verathread-actions/release@initial"
        with:
          token: ${{ secrets.PAT_TOKEN }}
          pat-token: ${{ secrets.PAT_TOKEN }}
          ghcr-token: ${{ secrets.GHCR_DOCKER_TOKEN }}
          issue: ${{ steps.setup.outputs.issue }}
          short-sha: ${{ steps.setup.outputs.short-sha }}
          namespace: "stg-next-1"
          artifact-name: ${{ steps.setup.outputs.repo-name }}
